// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.6.1.0
//      SpecFlow Generator Version:1.6.0.0
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace UsingSpecflowForUnitTests.BillingInstallmentDates
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.6.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Billing Installment Date Service")]
    public partial class BillingInstallmentDateServiceFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "BillingInstallmentDateService.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Billing Installment Date Service", "<TODO>", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 1/1/2011")]
        public virtual void BillingScheduleStartsOn112011Ending8152011AndTodayIs112011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 1/1/2011", ((string[])(null)));
#line 5
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table1.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2011"});
            table1.AddRow(new string[] {
                        "ALK",
                        "2",
                        "Q2",
                        "2/15/2011"});
            table1.AddRow(new string[] {
                        "ALK",
                        "3",
                        "Q3",
                        "5/15/2011"});
            table1.AddRow(new string[] {
                        "ALK",
                        "4",
                        "Q4",
                        "8/15/2011"});
#line 6
 testRunner.Given("a billing schedule of:", ((string)(null)), table1);
#line 13
 testRunner.When("requesting the installment date range for 1/1/2011");
#line 14
 testRunner.Then("the resulting range should be 1/1/2011 and 2/15/2011");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 1/15/2011")]
        public virtual void BillingScheduleStartsOn112011Ending8152011AndTodayIs1152011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 1/15/2011", ((string[])(null)));
#line 16
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table2.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2011"});
            table2.AddRow(new string[] {
                        "ALK",
                        "2",
                        "Q2",
                        "2/15/2011"});
            table2.AddRow(new string[] {
                        "ALK",
                        "3",
                        "Q3",
                        "5/15/2011"});
            table2.AddRow(new string[] {
                        "ALK",
                        "4",
                        "Q4",
                        "8/15/2011"});
#line 17
 testRunner.Given("a billing schedule of:", ((string)(null)), table2);
#line 24
 testRunner.When("requesting the installment date range for 1/15/2011");
#line 25
 testRunner.Then("the resulting range should be 1/1/2011 and 2/15/2011");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 2/15/2011")]
        public virtual void BillingScheduleStartsOn112011Ending8152011AndTodayIs2152011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 2/15/2011", ((string[])(null)));
#line 27
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table3.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2011"});
            table3.AddRow(new string[] {
                        "ALK",
                        "2",
                        "Q2",
                        "2/15/2011"});
            table3.AddRow(new string[] {
                        "ALK",
                        "3",
                        "Q3",
                        "5/15/2011"});
            table3.AddRow(new string[] {
                        "ALK",
                        "4",
                        "Q4",
                        "8/15/2011"});
#line 28
 testRunner.Given("a billing schedule of:", ((string)(null)), table3);
#line 35
 testRunner.When("requesting the installment date range for 2/15/2011");
#line 36
 testRunner.Then("the resulting range should be 1/1/2011 and 5/15/2011");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 3/15/2011")]
        public virtual void BillingScheduleStartsOn112011Ending8152011AndTodayIs3152011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 3/15/2011", ((string[])(null)));
#line 38
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table4.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2011"});
            table4.AddRow(new string[] {
                        "ALK",
                        "2",
                        "Q2",
                        "2/15/2011"});
            table4.AddRow(new string[] {
                        "ALK",
                        "3",
                        "Q3",
                        "5/15/2011"});
            table4.AddRow(new string[] {
                        "ALK",
                        "4",
                        "Q4",
                        "8/15/2011"});
#line 39
 testRunner.Given("a billing schedule of:", ((string)(null)), table4);
#line 46
 testRunner.When("requesting the installment date range for 3/15/2011");
#line 47
 testRunner.Then("the resulting range should be 1/1/2011 and 5/15/2011");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 5/15/2011")]
        public virtual void BillingScheduleStartsOn112011Ending8152011AndTodayIs5152011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 5/15/2011", ((string[])(null)));
#line 49
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table5.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2011"});
            table5.AddRow(new string[] {
                        "ALK",
                        "2",
                        "Q2",
                        "2/15/2011"});
            table5.AddRow(new string[] {
                        "ALK",
                        "3",
                        "Q3",
                        "5/15/2011"});
            table5.AddRow(new string[] {
                        "ALK",
                        "4",
                        "Q4",
                        "8/15/2011"});
#line 50
 testRunner.Given("a billing schedule of:", ((string)(null)), table5);
#line 57
 testRunner.When("requesting the installment date range for 5/15/2011");
#line 58
 testRunner.Then("the resulting range should be 1/1/2011 and 8/15/2011");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 5/20/2011")]
        public virtual void BillingScheduleStartsOn112011Ending8152011AndTodayIs5202011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 5/20/2011", ((string[])(null)));
#line 60
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table6.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2011"});
            table6.AddRow(new string[] {
                        "ALK",
                        "2",
                        "Q2",
                        "2/15/2011"});
            table6.AddRow(new string[] {
                        "ALK",
                        "3",
                        "Q3",
                        "5/15/2011"});
            table6.AddRow(new string[] {
                        "ALK",
                        "4",
                        "Q4",
                        "8/15/2011"});
#line 61
 testRunner.Given("a billing schedule of:", ((string)(null)), table6);
#line 68
 testRunner.When("requesting the installment date range for 5/20/2011");
#line 69
 testRunner.Then("the resulting range should be 1/1/2011 and 8/15/2011");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 8/15/2011")]
        public virtual void BillingScheduleStartsOn112011Ending8152011AndTodayIs8152011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 8/15/2011", ((string[])(null)));
#line 71
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table7.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2011"});
            table7.AddRow(new string[] {
                        "ALK",
                        "2",
                        "Q2",
                        "2/15/2011"});
            table7.AddRow(new string[] {
                        "ALK",
                        "3",
                        "Q3",
                        "5/15/2011"});
            table7.AddRow(new string[] {
                        "ALK",
                        "4",
                        "Q4",
                        "8/15/2011"});
#line 72
 testRunner.Given("a billing schedule of:", ((string)(null)), table7);
#line 79
 testRunner.When("requesting the installment date range for 8/15/2011");
#line 80
 testRunner.Then("the resulting range should be 1/1/2011 and 8/15/2011");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 9/1/2011")]
        public virtual void BillingScheduleStartsOn112011Ending8152011AndTodayIs912011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 9/1/2011", ((string[])(null)));
#line 82
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table8.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2011"});
            table8.AddRow(new string[] {
                        "ALK",
                        "2",
                        "Q2",
                        "2/15/2011"});
            table8.AddRow(new string[] {
                        "ALK",
                        "3",
                        "Q3",
                        "5/15/2011"});
            table8.AddRow(new string[] {
                        "ALK",
                        "4",
                        "Q4",
                        "8/15/2011"});
#line 83
 testRunner.Given("a billing schedule of:", ((string)(null)), table8);
#line 90
 testRunner.When("requesting the installment date range for 9/1/2011");
#line 91
 testRunner.Then("the resulting range should be 1/1/2011 and 9/1/2011");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 12/31/2011")]
        public virtual void BillingScheduleStartsOn112011Ending8152011AndTodayIs12312011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 1/1/2011 ending 8/15/2011 and today is 12/31/2011", ((string[])(null)));
#line 93
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table9.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2011"});
            table9.AddRow(new string[] {
                        "ALK",
                        "2",
                        "Q2",
                        "2/15/2011"});
            table9.AddRow(new string[] {
                        "ALK",
                        "3",
                        "Q3",
                        "5/15/2011"});
            table9.AddRow(new string[] {
                        "ALK",
                        "4",
                        "Q4",
                        "8/15/2011"});
#line 94
 testRunner.Given("a billing schedule of:", ((string)(null)), table9);
#line 101
 testRunner.When("requesting the installment date range for 12/31/2011");
#line 102
 testRunner.Then("the resulting range should be 1/1/2011 and 12/31/2011");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 1/1/2011 ending 1/1/2012 and today is 12/31/2011")]
        public virtual void BillingScheduleStartsOn112011Ending112012AndTodayIs12312011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 1/1/2011 ending 1/1/2012 and today is 12/31/2011", ((string[])(null)));
#line 104
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table10.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2011"});
            table10.AddRow(new string[] {
                        "ALK",
                        "2",
                        "Q2",
                        "2/15/2011"});
            table10.AddRow(new string[] {
                        "ALK",
                        "3",
                        "Q3",
                        "5/15/2011"});
            table10.AddRow(new string[] {
                        "ALK",
                        "4",
                        "Q4",
                        "8/15/2011"});
            table10.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2012"});
#line 105
 testRunner.Given("a billing schedule of:", ((string)(null)), table10);
#line 113
 testRunner.When("requesting the installment date range for 12/31/2011");
#line 114
 testRunner.Then("the resulting range should be 1/1/2011 and 1/1/2012");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 1/1/2011 ending 1/1/2012 and today is 9/1/2011")]
        public virtual void BillingScheduleStartsOn112011Ending112012AndTodayIs912011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 1/1/2011 ending 1/1/2012 and today is 9/1/2011", ((string[])(null)));
#line 116
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table11.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2011"});
            table11.AddRow(new string[] {
                        "ALK",
                        "2",
                        "Q2",
                        "2/15/2011"});
            table11.AddRow(new string[] {
                        "ALK",
                        "3",
                        "Q3",
                        "5/15/2011"});
            table11.AddRow(new string[] {
                        "ALK",
                        "4",
                        "Q4",
                        "8/15/2011"});
            table11.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2012"});
#line 117
 testRunner.Given("a billing schedule of:", ((string)(null)), table11);
#line 125
 testRunner.When("requesting the installment date range for 9/1/2011");
#line 126
 testRunner.Then("the resulting range should be 1/1/2011 and 1/1/2012");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 1/1/2011 ending 1/1/2012 and today is 1/1/2012")]
        public virtual void BillingScheduleStartsOn112011Ending112012AndTodayIs112012()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 1/1/2011 ending 1/1/2012 and today is 1/1/2012", ((string[])(null)));
#line 128
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table12.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2011"});
            table12.AddRow(new string[] {
                        "ALK",
                        "2",
                        "Q2",
                        "2/15/2011"});
            table12.AddRow(new string[] {
                        "ALK",
                        "3",
                        "Q3",
                        "5/15/2011"});
            table12.AddRow(new string[] {
                        "ALK",
                        "4",
                        "Q4",
                        "8/15/2011"});
            table12.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2012"});
#line 129
 testRunner.Given("a billing schedule of:", ((string)(null)), table12);
#line 137
 testRunner.When("requesting the installment date range for 1/1/2012");
#line 138
 testRunner.Then("the resulting range should be 1/1/2012 and 1/1/2012");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 1/1/2011 ending 8/15/2012 and today is 1/1/2012")]
        public virtual void BillingScheduleStartsOn112011Ending8152012AndTodayIs112012()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 1/1/2011 ending 8/15/2012 and today is 1/1/2012", ((string[])(null)));
#line 140
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table13.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2011"});
            table13.AddRow(new string[] {
                        "ALK",
                        "2",
                        "Q2",
                        "2/15/2011"});
            table13.AddRow(new string[] {
                        "ALK",
                        "3",
                        "Q3",
                        "5/15/2011"});
            table13.AddRow(new string[] {
                        "ALK",
                        "4",
                        "Q4",
                        "8/15/2011"});
            table13.AddRow(new string[] {
                        "ALK",
                        "1",
                        "Q1",
                        "1/1/2012"});
            table13.AddRow(new string[] {
                        "ALK",
                        "2",
                        "Q2",
                        "2/15/2012"});
            table13.AddRow(new string[] {
                        "ALK",
                        "3",
                        "Q3",
                        "5/15/2012"});
            table13.AddRow(new string[] {
                        "ALK",
                        "4",
                        "Q4",
                        "8/15/2012"});
#line 141
 testRunner.Given("a billing schedule of:", ((string)(null)), table13);
#line 152
 testRunner.When("requesting the installment date range for 1/1/2012");
#line 153
 testRunner.Then("the resulting range should be 1/1/2012 and 2/15/2012");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 5/25/2011")]
        public virtual void BillingScheduleStartsOn712011Ending2152012AndTodayIs5252011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 5/25/2011", ((string[])(null)));
#line 158
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table14.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2010"});
            table14.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2010"});
            table14.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2010"});
            table14.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2010"});
            table14.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2011"});
            table14.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2011"});
            table14.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2011"});
            table14.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2012"});
#line 159
 testRunner.Given("a billing schedule of:", ((string)(null)), table14);
#line 170
 testRunner.When("requesting the installment date range for 5/25/2011");
#line 171
 testRunner.Then("the resulting range should be 7/1/2010 and 7/1/2011");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 7/1/2011")]
        public virtual void BillingScheduleStartsOn712011Ending2152012AndTodayIs712011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 7/1/2011", ((string[])(null)));
#line 173
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table15.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2010"});
            table15.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2010"});
            table15.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2010"});
            table15.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2010"});
            table15.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2011"});
            table15.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2011"});
            table15.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2011"});
            table15.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2012"});
#line 174
 testRunner.Given("a billing schedule of:", ((string)(null)), table15);
#line 185
 testRunner.When("requesting the installment date range for 7/1/2011");
#line 186
 testRunner.Then("the resulting range should be 7/1/2011 and 8/15/2011");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 7/10/2011")]
        public virtual void BillingScheduleStartsOn712011Ending2152012AndTodayIs7102011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 7/10/2011", ((string[])(null)));
#line 188
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table16.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2010"});
            table16.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2010"});
            table16.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2010"});
            table16.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2010"});
            table16.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2011"});
            table16.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2011"});
            table16.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2011"});
            table16.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2012"});
#line 189
 testRunner.Given("a billing schedule of:", ((string)(null)), table16);
#line 200
 testRunner.When("requesting the installment date range for 7/10/2011");
#line 201
 testRunner.Then("the resulting range should be 7/1/2011 and 8/15/2011");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 8/15/2011")]
        public virtual void BillingScheduleStartsOn712011Ending2152012AndTodayIs8152011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 8/15/2011", ((string[])(null)));
#line 203
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table17.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2010"});
            table17.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2010"});
            table17.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2010"});
            table17.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2010"});
            table17.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2011"});
            table17.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2011"});
            table17.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2011"});
            table17.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2012"});
#line 204
 testRunner.Given("a billing schedule of:", ((string)(null)), table17);
#line 215
 testRunner.When("requesting the installment date range for 8/15/2011");
#line 216
 testRunner.Then("the resulting range should be 7/1/2011 and 11/15/2011");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 9/13/2011")]
        public virtual void BillingScheduleStartsOn712011Ending2152012AndTodayIs9132011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 9/13/2011", ((string[])(null)));
#line 218
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table18.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2010"});
            table18.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2010"});
            table18.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2010"});
            table18.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2010"});
            table18.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2011"});
            table18.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2011"});
            table18.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2011"});
            table18.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2012"});
#line 219
 testRunner.Given("a billing schedule of:", ((string)(null)), table18);
#line 230
 testRunner.When("requesting the installment date range for 9/13/2011");
#line 231
 testRunner.Then("the resulting range should be 7/1/2011 and 11/15/2011");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 11/15/2011")]
        public virtual void BillingScheduleStartsOn712011Ending2152012AndTodayIs11152011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 11/15/2011", ((string[])(null)));
#line 233
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table19.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2010"});
            table19.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2010"});
            table19.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2010"});
            table19.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2010"});
            table19.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2011"});
            table19.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2011"});
            table19.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2011"});
            table19.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2012"});
#line 234
 testRunner.Given("a billing schedule of:", ((string)(null)), table19);
#line 245
 testRunner.When("requesting the installment date range for 11/15/2011");
#line 246
 testRunner.Then("the resulting range should be 7/1/2011 and 2/15/2012");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 12/15/2011")]
        public virtual void BillingScheduleStartsOn712011Ending2152012AndTodayIs12152011()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 12/15/2011", ((string[])(null)));
#line 248
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table20.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2010"});
            table20.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2010"});
            table20.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2010"});
            table20.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2010"});
            table20.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2011"});
            table20.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2011"});
            table20.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2011"});
            table20.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2012"});
#line 249
 testRunner.Given("a billing schedule of:", ((string)(null)), table20);
#line 260
 testRunner.When("requesting the installment date range for 12/15/2011");
#line 261
 testRunner.Then("the resulting range should be 7/1/2011 and 2/15/2012");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 1/1/2012")]
        public virtual void BillingScheduleStartsOn712011Ending2152012AndTodayIs112012()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 1/1/2012", ((string[])(null)));
#line 263
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table21.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2010"});
            table21.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2010"});
            table21.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2010"});
            table21.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2010"});
            table21.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2011"});
            table21.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2011"});
            table21.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2011"});
            table21.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2012"});
#line 264
 testRunner.Given("a billing schedule of:", ((string)(null)), table21);
#line 275
 testRunner.When("requesting the installment date range for 1/1/2012");
#line 276
 testRunner.Then("the resulting range should be 7/1/2011 and 2/15/2012");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 2/15/2012")]
        public virtual void BillingScheduleStartsOn712011Ending2152012AndTodayIs2152012()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 2/15/2012", ((string[])(null)));
#line 278
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table22.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2010"});
            table22.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2010"});
            table22.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2010"});
            table22.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2010"});
            table22.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2011"});
            table22.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2011"});
            table22.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2011"});
            table22.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2012"});
#line 279
 testRunner.Given("a billing schedule of:", ((string)(null)), table22);
#line 290
 testRunner.When("requesting the installment date range for 2/15/2012");
#line 291
 testRunner.Then("the resulting range should be 7/1/2011 and 2/15/2012");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 2/28/2012")]
        public virtual void BillingScheduleStartsOn712011Ending2152012AndTodayIs2282012()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 2/28/2012", ((string[])(null)));
#line 293
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table23.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2010"});
            table23.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2010"});
            table23.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2010"});
            table23.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2010"});
            table23.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2011"});
            table23.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2011"});
            table23.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2011"});
            table23.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2012"});
#line 294
 testRunner.Given("a billing schedule of:", ((string)(null)), table23);
#line 305
 testRunner.When("requesting the installment date range for 2/28/2012");
#line 306
 testRunner.Then("the resulting range should be 7/1/2011 and 2/28/2012");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 3/28/2012")]
        public virtual void BillingScheduleStartsOn712011Ending2152012AndTodayIs3282012()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 7/1/2011 ending 2/15/2012 and today is 3/28/2012", ((string[])(null)));
#line 308
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table24.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2010"});
            table24.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2010"});
            table24.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2010"});
            table24.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2010"});
            table24.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2011"});
            table24.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2011"});
            table24.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2011"});
            table24.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2012"});
#line 309
 testRunner.Given("a billing schedule of:", ((string)(null)), table24);
#line 320
 testRunner.When("requesting the installment date range for 3/28/2012");
#line 321
 testRunner.Then("the resulting range should be 7/1/2011 and 3/28/2012");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 7/1/2011 ending 2/15/2013 and today is 2/28/2012")]
        public virtual void BillingScheduleStartsOn712011Ending2152013AndTodayIs2282012()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 7/1/2011 ending 2/15/2013 and today is 2/28/2012", ((string[])(null)));
#line 323
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table25.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2010"});
            table25.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2010"});
            table25.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2010"});
            table25.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2010"});
            table25.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2011"});
            table25.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2011"});
            table25.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2011"});
            table25.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2012"});
            table25.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2012"});
            table25.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2012"});
            table25.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2012"});
            table25.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2013"});
#line 324
 testRunner.Given("a billing schedule of:", ((string)(null)), table25);
#line 339
 testRunner.When("requesting the installment date range for 2/28/2012");
#line 340
 testRunner.Then("the resulting range should be 7/1/2011 and 7/1/2012");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Billing schedule starts on 7/1/2011 ending 2/15/2013 and today is 3/28/2012")]
        public virtual void BillingScheduleStartsOn712011Ending2152013AndTodayIs3282012()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Billing schedule starts on 7/1/2011 ending 2/15/2013 and today is 3/28/2012", ((string[])(null)));
#line 342
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResortId",
                        "InstallmentDateTypeId",
                        "Description",
                        "Date"});
            table26.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2010"});
            table26.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2010"});
            table26.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2010"});
            table26.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2010"});
            table26.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2011"});
            table26.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2011"});
            table26.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2011"});
            table26.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2012"});
            table26.AddRow(new string[] {
                        "VLA",
                        "1",
                        "Q1",
                        "7/1/2012"});
            table26.AddRow(new string[] {
                        "VLA",
                        "2",
                        "Q2",
                        "8/15/2012"});
            table26.AddRow(new string[] {
                        "VLA",
                        "3",
                        "Q3",
                        "11/15/2012"});
            table26.AddRow(new string[] {
                        "VLA",
                        "4",
                        "Q4",
                        "2/15/2013"});
#line 343
 testRunner.Given("a billing schedule of:", ((string)(null)), table26);
#line 358
 testRunner.When("requesting the installment date range for 3/28/2012");
#line 359
 testRunner.Then("the resulting range should be 7/1/2011 and 7/1/2012");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
